name: CI/CD Pipeline
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
jobs:
  # Quality Checks Job
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Check code formatting
        run: npm run format:check
      - name: Run ESLint
        run: npm run lint
      - name: Type check
        run: npm run type-check
      - name: YAML lint
        run: npm run lint:yaml
      - name: Build project
        run: npm run build
  # Testing Job
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Generate coverage report
        run: npm run test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
  # Security Audit Job
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run security audit
        run: npm audit --audit-level=moderate
      - name: Check for known vulnerabilities
        run: npm audit --audit-level=high
  # Performance Check Job
  performance:
    name: Performance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Check bundle size
        run: |
          echo "Checking bundle size..."
          if [ -d "dist" ]; then
            echo "Bundle size:"
            du -sh dist/*
          else
            echo "No dist directory found"
            exit 1
          fi
  # Browser Compatibility Job
  browser-tests:
    name: Browser Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Run browser compatibility checks
        run: |
          echo "Testing browser compatibility..."
          # Check if build output exists and is valid
          if [ ! -f "dist/index.html" ]; then
            echo "❌ Build output not found"
            exit 1
          fi
          # Check for expected content in built files
          if grep -q "Gospel Game" dist/index.html; then
            echo "✅ HTML content check passed"
          else
            echo "❌ Expected content not found in HTML"
            exit 1
          fi
          # Check if assets are present
          if [ ! -d "dist/assets" ]; then
            echo "❌ Assets directory not found"
            exit 1
          fi
          # Check for CSS and JS files
          if ls dist/assets/*.css > /dev/null 2>&1; then
            echo "✅ CSS files found"
          else
            echo "❌ No CSS files found"
            exit 1
          fi
          if ls dist/assets/*.js > /dev/null 2>&1; then
            echo "✅ JavaScript files found"
          else
            echo "❌ No JavaScript files found"
            exit 1
          fi
          echo "✅ Browser compatibility check passed"
  # Documentation Check Job
  docs:
    name: Documentation Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check documentation links
        run: |
          echo "Checking documentation files..."
          if [ ! -f "README.md" ]; then
            echo "README.md is missing"
            exit 1
          fi
          if [ ! -f "CONTRIBUTING.md" ]; then
            echo "CONTRIBUTING.md is missing"
            exit 1
          fi
          if [ ! -d "docs" ]; then
            echo "docs directory is missing"
            exit 1
          fi
          echo "Documentation check passed"
  # Final Status Check
  status:
    name: Status Check
    runs-on: ubuntu-latest
    needs: [quality, test, security, performance, browser-tests, docs]
    steps:
      - name: Check all jobs completed
        run: |
          echo "All CI checks completed successfully!"
          echo "✅ Code Quality: Passed"
          echo "✅ Tests: Passed"
          echo "✅ Security: Passed"
          echo "✅ Performance: Passed"
          echo "✅ Browser Tests: Passed"
          echo "✅ Documentation: Passed"
      - name: Trigger deployment (main branch only)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "CI pipeline completed successfully on main branch"
          echo "Deployment pipeline will be triggered automatically"

